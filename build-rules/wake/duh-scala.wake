def scalacOpts =
  "-deprecation",
  "-feature",
  "-unchecked",
  "-language:reflectiveCalls",
  "-Xsource:2.11",
  Nil

global def duhScalaRoot = simplify "{here}/../../"

global def jsonDecodersScalaModule =
  makeScalaModuleFromJSON duhScalaRoot "json-decoders"
  | setScalaModuleRootDir "{duhScalaRoot}/json-decoders"
  | setScalaModuleSourceDirs ("src", Nil)
  | setScalaModuleScalacOptions scalacOpts
  | addMacrosParadiseCompilerPlugin

global def duhScalaScalaModule =
  makeScalaModuleFromJSON duhScalaRoot "duh-scala"
  | setScalaModuleRootDir "{duhScalaRoot}/craft"
  | setScalaModuleSourceDirs ("src", Nil)
  | setScalaModuleDeps (rocketchipScalaModule, jsonDecodersScalaModule, Nil)
  | setScalaModuleScalacOptions scalacOpts

global def asdf Unit =
  duhExportScala
  "{duhScalaRoot}/params.json"
  "{duhScalaRoot}/example.json"
  (source "{duhScalaRoot}/example-bus-spec.json", Nil)

global def lkj Unit =
  duhExportBus "{duhScalaRoot}/example-bus-spec.json"

global def parseJSON5 file =
  def jars = scalaModuleClasspath jsonDecodersScalaModule
  def classpath =
    jars
    | map getPathName
    | catWith ":"
  def cmdline =
    "java",
    "-cp", classpath,
    "duh.json5.Test",
    file.simplify,
    Nil
  def inputs = makeStatePath file, jars
  makePlan cmdline inputs
  | setPlanKeep False
  | runJob

global def duhExportScala paramsFile jsonFile visible =
  def jars = scalaModuleClasspath duhScalaScalaModule
  def classpath =
    jars
    | map getPathName
    | catWith ":"
  def cmdline =
    "java",
    "-cp", classpath,
    "duh.scala.DUHScala",
    "component",
    paramsFile,
    jsonFile,
    Nil
  def inputs = makeStatePath paramsFile, makeStatePath jsonFile, jars ++ visible
  def _ = map (_.getPathResult.format.println) inputs
  makePlan cmdline inputs
  | setPlanKeep False
  | runJob

global def duhExportBus jsonFile =
  def jars = scalaModuleClasspath duhScalaScalaModule
  def classpath =
    jars
    | map getPathName
    | catWith ":"
  def cmdline =
    "java",
    "-cp", classpath,
    "duh.scala.DUHScala",
    "bus",
    jsonFile,
    Nil
  def inputs = makeStatePath jsonFile, jars
  makePlan cmdline inputs
  | setPlanKeep False
  | runJob
